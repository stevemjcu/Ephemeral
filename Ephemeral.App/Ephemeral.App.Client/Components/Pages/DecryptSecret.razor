@page "/decrypt/{id}"
@using System.Text
@using System.Text.Json
@inject SecretsApi Api
@inject NavigationManager NavigationManager

<PageTitle>Decrypt Secret</PageTitle>

<Submission Name="Decrypt"
			Icon=@Icons.Material.Filled.LockOpen
			Description="Decrypt the secret to view its contents."
			Action=Decrypt
			Value="@CiphertextEncoded"
			IsReadOnly=true />

@code {
	[Parameter] public required string Id { get; set; }

	public required string KeyEncoded { get; set; }
	public required string CiphertextEncoded { get; set; }

	protected override async Task OnInitializedAsync()
	{
		KeyEncoded = new Uri(NavigationManager.Uri).Fragment[1..];
		CiphertextEncoded = JsonSerializer.Deserialize<string>(await Api.SecretsGETAsync(new(Id)))!;
	}

	private Task<string> Decrypt(string _)
	{
		// 1. Use Base64 to decode string as binary data then decrypt
		// 2. Use UTF8 to decode binary data as original string

		var key = Convert.FromBase64String(KeyEncoded);
		var ciphertext = Convert.FromBase64String(CiphertextEncoded);
		var plaintextEncoded = Crypto.Encrypt(ciphertext, key, false);

		return Task.FromResult(Encoding.UTF8.GetString(plaintextEncoded));
	}
}